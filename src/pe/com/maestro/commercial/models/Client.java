package pe.com.maestro.commercial.models;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import android.database.Cursor;
import android.text.TextUtils;

import pe.com.maestro.commercial.db.Contract;

import rp3.data.entity.EntityBase;
import rp3.db.sqlite.DataBase;
import rp3.util.CursorUtils;

public class Client extends EntityBase<Client> {

	public static final int KEY_DOCUMENT_NUMBER = 1;
	public static final int KEY_FIRST_NAME = 2;
	public static final int KEY_LAST_NAME = 3;	
	public static final int KEY_ADDRESS = 4;
	public static final int KEY_CELLPHONE = 5;
	public static final int KEY_PHONE = 6;
	public static final int KEY_EMAIL = 7;
	public static final int KEY_PROFILE_ID = 8;
	
	public static final int REPAIR_STRATEGY_TYPE_SELECTABLE = 1;
	public static final int REPAIR_STRATEGY_TYPE_MESSAGE = 2;
	
	private long id;
	private String documentNumber;
	private String firstName;
	private String middleName;
	private String lastName;
	private String secondLastName;
	private String address;
	private String cellphone;
	private String phoneNumber;
	private String email;
	private long geopoliticalId;	
	private Date birthdate;
	private boolean hasFinancialProduct;
	private String financialProductMessage;
	private boolean hasFinancialProductAlert;
	private String financialProductAlertMessage;
	private int internalProcessId;	
				
	private String phoneNumber2;
	private String cellphone2;
	private String roadTypeId;
	private String roadTypeName;
	private String zoneTypeId;
	private String zoneTypeName;
	private String profileId;
	private String livingSituation;
	private String addressSegment1;
	private String addressSegment2;
	private String addressSegment3;
	private String addressSegment4;
	private String addressSegment5;
	private String addressSegment6;
	private String addressSegment7;
	private String addressSegment8;
	private String addressSegment9;
	private String addressReference;	
	
	private double amountFinancialProduct;
	private Date validityFinancialProductDate;
	
	private boolean applyRepairStrategy;
	private int repairStrategyType;
	private String repairStrategyId;
	private String financialProductReasonOfNotInterest;				

	private List<Alert> alerts;
	private List<ClientFinancialProduct> financialProducts;
	
	
	@Override
	public long getID() {		
		return id;
	}

	@Override
	public void setID(long id) {
		this.id = id;
	}

	@Override
	public boolean isAutoGeneratedId() {
		return true;
	}

	@Override
	public String getTableName() {		
		return Contract.Client.TABLE_NAME;
	}

	@Override
	public void setValues() {			
		setValue(Contract.Client.COLUMN_ADDRESS, getAddress());
		setValue(Contract.Client.COLUMN_BIRTHDAY, getBirthdate());
		setValue(Contract.Client.COLUMN_CELLPHONE, getCellphone());
		setValue(Contract.Client.COLUMN_DOCUMENT_ID, getDocumentNumber());
		setValue(Contract.Client.COLUMN_EMAIL, getEmail());
		setValue(Contract.Client.COLUMN_GEOPOLITICAL_ID, getGeopoliticalId());
		setValue(Contract.Client.COLUMN_HAS_FINANCIAL_PRODUCT, hasFinancialProduct());
		setValue(Contract.Client.COLUMN_FINANCIAL_PRODUCT_MESSAGE, getFinancialProductMessage());
		setValue(Contract.Client.COLUMN_FIRST_NAME, getFirstName());
		setValue(Contract.Client.COLUMN_MIDDLE_NAME, getMiddleName());
		setValue(Contract.Client.COLUMN_LAST_NAME, getLastName());		
		setValue(Contract.Client.COLUMN_PHONENUMBER, getPhoneNumber());
		setValue(Contract.Client.COLUMN_SECOND_LAST_NAME, getSecondLastName());
		setValue(Contract.Client.COLUMN_HAS_FINANCIAL_PRODUCT_ALERT, hasFinancialProductAlert());
		setValue(Contract.Client.COLUMN_FINANCIAL_PRODUCT_ALERT_MESSAGE, getFinancialProductAlertMessage());		
		setValue(Contract.Client.COLUMN_INTERNAL_PROCESS_ID, getInternalProcessId());
		setValue(Contract.Client.COLUMN_VALIDITY_FINANCIAL_PRODUCT_DATE, getValidityFinancialProductDate());
		setValue(Contract.Client.COLUMN_AMOUNT_FINANCIAL_PRODUCT, getAmountFinancialProduct());
		
		setValue(Contract.Client.COLUMN_PHONENUMBER2, this.phoneNumber2);
		setValue(Contract.Client.COLUMN_CELLPHONE2, this.cellphone2);
		setValue(Contract.Client.COLUMN_ROADTYPE_ID, this.roadTypeId);
		setValue(Contract.Client.COLUMN_ROADTYPE_NAME, this.roadTypeName);
		setValue(Contract.Client.COLUMN_ZONETYPE_ID, this.zoneTypeId);
		setValue(Contract.Client.COLUMN_ZONETYPE_NAME, this.zoneTypeName);
		setValue(Contract.Client.COLUMN_LIVING_SITUATION, this.livingSituation);
		setValue(Contract.Client.COLUMN_PROFILE_ID, this.profileId);
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT1, this.addressSegment1);
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT2, this.addressSegment2);
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT3, this.addressSegment3);
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT4, this.addressSegment4);		
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT5, this.addressSegment5);
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT6, this.addressSegment6);
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT7, this.addressSegment7);
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT8, this.addressSegment8);
		setValue(Contract.Client.COLUMN_ADDRESS_SEGMENT9, this.addressSegment9);
		setValue(Contract.Client.COLUMN_ADDRESS_REFERENCE, this.addressReference);
		setValue(Contract.Client.COLUMN_APPLY_REPAIR_STRATEGY, this.applyRepairStrategy);
		setValue(Contract.Client.COLUMN_REPAIR_STRATEGY_TYPE, this.repairStrategyType);
		setValue(Contract.Client.COLUMN_REPAIR_STRATEGY_ID, this.repairStrategyId);
		setValue(Contract.Client.COLUMN_FINANCIAL_PRODUCT_REASON_NOT_INTEREST, this.financialProductReasonOfNotInterest);
	}
	
	@Override
	public Object getValue(String key) {		
		return null;
	}

	@Override
	public String getDescription() {		
		return this.getFullName();
	}
	
	public String getDocumentNumber() {
		return documentNumber;
	}

	public void setDocumentNumber(String documentNumber) {
		this.documentNumber = documentNumber;
	}
	
	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getMiddleName() {
		return middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getSecondLastName() {
		return secondLastName;
	}
	
	public String getFullName(){
		StringBuilder b = new StringBuilder();
		if(!TextUtils.isEmpty(firstName))
			b.append(firstName + " ");
		if(!TextUtils.isEmpty(middleName))
			b.append(middleName + " ");
		if(!TextUtils.isEmpty(lastName))
			b.append(lastName + " ");
		if(!TextUtils.isEmpty(secondLastName))
			b.append(secondLastName);
		
		return b.toString().trim();
	}

	public void setSecondLastName(String secondLastName) {
		this.secondLastName = secondLastName;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getCellphone() {
		return cellphone;
	}

	public void setCellphone(String cellphone) {
		this.cellphone = cellphone;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public long getGeopoliticalId() {
		return geopoliticalId;
	}

	public void setGeopoliticalId(long geopoliticalId) {
		this.geopoliticalId = geopoliticalId;
	}

	public Date getBirthdate() {
		return birthdate;
	}

	public void setBirthdate(Date birthdate) {
		this.birthdate = birthdate;
	}

	public boolean hasFinancialProduct() {
		return hasFinancialProduct;
	}

	public void setHasFinancialProduct(boolean hasFinancialProduct) {
		this.hasFinancialProduct = hasFinancialProduct;
	}

	public String getFinancialProductMessage() {
		return financialProductMessage;
	}

	public void setFinancialProductMessage(String financialProductMessage) {
		this.financialProductMessage = financialProductMessage;
	}		

	public double getAmountFinancialProduct() {
		return amountFinancialProduct;
	}

	public void setAmountFinancialProduct(double amountFinancialProduct) {
		this.amountFinancialProduct = amountFinancialProduct;
	}

	public Date getValidityFinancialProductDate() {
		return validityFinancialProductDate;
	}

	public void setValidityFinancialProductDate(Date validityFinancialProductDate) {
		this.validityFinancialProductDate = validityFinancialProductDate;
	}

	
	public boolean hasFinancialProductAlert() {
		return hasFinancialProductAlert;
	}

	public void setHasFinancialProductAlert(boolean hasFinancialProductAlert) {
		this.hasFinancialProductAlert = hasFinancialProductAlert;
	}

	public String getFinancialProductAlertMessage() {
		return financialProductAlertMessage;
	}

	public void setFinancialProductAlertMessage(String financialProductAlertMessage) {
		this.financialProductAlertMessage = financialProductAlertMessage;
	}
	
	public int getInternalProcessId() {
		return internalProcessId;
	}

	public void setInternalProcessId(int internalProcessId) {
		this.internalProcessId = internalProcessId;
	}	
	
	public String getPhoneNumber2() {
		return phoneNumber2;
	}

	public void setPhoneNumber2(String phoneNumber2) {
		this.phoneNumber2 = phoneNumber2;
	}

	public String getCellphone2() {
		return cellphone2;
	}

	public void setCellphone2(String cellphone2) {
		this.cellphone2 = cellphone2;
	}

	public String getRoadTypeId() {
		return roadTypeId;
	}

	public void setRoadTypeId(String roadTypeId) {
		this.roadTypeId = roadTypeId;
	}

	public String getRoadTypeName() {
		return roadTypeName;
	}

	public void setRoadTypeName(String roadTypeName) {
		this.roadTypeName = roadTypeName;
	}

	public String getZoneTypeId() {
		return zoneTypeId;
	}

	public void setZoneTypeId(String zoneTypeId) {
		this.zoneTypeId = zoneTypeId;
	}

	public String getZoneTypeName() {
		return zoneTypeName;
	}

	public void setZoneTypeName(String zoneTypeName) {
		this.zoneTypeName = zoneTypeName;
	}

	public String getLivingSituation() {
		return livingSituation;
	}

	public void setLivingSituation(String livingSituation) {
		this.livingSituation = livingSituation;
	}

	public String getAddressSegment1() {
		return addressSegment1;
	}

	public void setAddressSegment1(String addressSegment1) {
		this.addressSegment1 = addressSegment1;
	}

	public String getAddressSegment2() {
		return addressSegment2;
	}

	public void setAddressSegment2(String addressSegment2) {
		this.addressSegment2 = addressSegment2;
	}

	public String getAddressSegment3() {
		return addressSegment3;
	}

	public void setAddressSegment3(String addressSegment3) {
		this.addressSegment3 = addressSegment3;
	}

	public String getAddressSegment4() {
		return addressSegment4;
	}

	public void setAddressSegment4(String addressSegment4) {
		this.addressSegment4 = addressSegment4;
	}

	public String getAddressSegment5() {
		return addressSegment5;
	}

	public void setAddressSegment5(String addressSegment5) {
		this.addressSegment5 = addressSegment5;
	}

	public String getAddressSegment6() {
		return addressSegment6;
	}

	public void setAddressSegment6(String addressSegment6) {
		this.addressSegment6 = addressSegment6;
	}

	public String getAddressSegment7() {
		return addressSegment7;
	}

	public void setAddressSegment7(String addressSegment7) {
		this.addressSegment7 = addressSegment7;
	}

	public String getAddressSegment8() {
		return addressSegment8;
	}

	public void setAddressSegment8(String addressSegment8) {
		this.addressSegment8 = addressSegment8;
	}

	public String getAddressSegment9() {
		return addressSegment9;
	}
	
	public void setAddressSegment9(String addressSegment9) {
		this.addressSegment9 = addressSegment9;
	}
	
	public String getAddressReference() {
		return addressReference;
	}

	public void setAddressReference(String addressReference) {
		this.addressReference = addressReference;
	}	

	public String getProfileId() {
		return profileId;
	}

	public void setProfileId(String profileId) {
		this.profileId = profileId;
	}
	
	public boolean applyRepairStrategy() {
		return applyRepairStrategy;
	}

	public void setApplyRepairStrategy(boolean applyRepairStrategy) {
		this.applyRepairStrategy = applyRepairStrategy;
	}

	public int getRepairStrategyType() {
		return repairStrategyType;
	}

	public void setRepairStrategyType(int repairStrategyType) {
		this.repairStrategyType = repairStrategyType;
	}
	
	public String getRepairStrategyId() {
		return repairStrategyId;
	}

	public void setRepairStrategyId(String repairStrategyId) {
		this.repairStrategyId = repairStrategyId;
	}
	
	public String getFinancialProductReasonOfNotInterest() {
		return financialProductReasonOfNotInterest;
	}

	public void setFinancialProductReasonOfNotInterest(
			String financialProductReasonOfNotInterest) {
		this.financialProductReasonOfNotInterest = financialProductReasonOfNotInterest;
	}

	public List<Alert> getAlerts(){
		if(alerts == null) alerts = new ArrayList<Alert>();
		return alerts;
	}
	
	public void setAlerts(List<Alert> alerts){
		this.alerts = alerts;
	}
	
	public List<ClientFinancialProduct> getClientFinancialProducts(){
		if(financialProducts == null) financialProducts = new ArrayList<ClientFinancialProduct>();
		return financialProducts;
	}
	
	public void clearClientFinancialProductSelection(){
		List<ClientFinancialProduct> list = getClientFinancialProducts();
		for(ClientFinancialProduct p : list){
			p.setIsSelected(false);
		}
	}
	
	public ClientFinancialProduct getClientFinancialProductSelected(){
		ClientFinancialProduct sel = null;
		List<ClientFinancialProduct> list = getClientFinancialProducts();
		for(ClientFinancialProduct p : list)
		{
			if(p.isSelected()){
				sel = p;
				break;
			}
		}
		return sel;		
	}
	
	@Override
	protected void onPrepareUpdate(DataBase db, int actionId) {		
		super.onPrepareUpdate(db,actionId);
		if(financialProducts!=null){
			for(ClientFinancialProduct p: financialProducts){
				ClientFinancialProduct.update(db, p);
			}
		}
	}
	
	public void setFinancialProducts(List<ClientFinancialProduct> products){
		this.financialProducts = products;
	}
	
	public static long getClientID(DataBase db, String documentNumber){
		Cursor c = db.query(Contract.Client.TABLE_NAME, 
				Contract.Client._ID, Contract.Client.COLUMN_DOCUMENT_ID + " = ?", documentNumber);
		
		if(c.moveToFirst())
			return CursorUtils.getLong(c);
		else 
			return -1;
	}
	
	public static void delete(DataBase db, long id){
		db.delete(Contract.Client.TABLE_NAME, Contract.Client._ID + " = ?", id);
	}
	
	public static void deleteClientByDocument(DataBase db, String clientDocumentNumber){
		db.delete(Contract.Client.TABLE_NAME, Contract.Client.COLUMN_DOCUMENT_ID + " = ?", clientDocumentNumber);
	}
	
	public static Client getClient(DataBase db, long clientId, boolean includeAlerts, boolean includeFinancialProducts){
		return getClient(db, Contract.Client._ID + " = ?", String.valueOf(clientId), includeAlerts, includeFinancialProducts);
	}
	
	public static Client getClient(DataBase db, String documentNumber, boolean includeAlerts, boolean includeFinancialProducts){
		return getClient(db, Contract.Client.COLUMN_DOCUMENT_ID + " = ?", documentNumber, includeAlerts, includeFinancialProducts);
	}
	
	private static Client getClient(DataBase db, String filter, String value, boolean includeAlerts, boolean includeFinancialProducts){
		Client client = null;
		
		Cursor c = db.query(Contract.Client.TABLE_NAME, 
				new String[]{
					Contract.Client._ID,
					Contract.Client.COLUMN_ADDRESS,
					Contract.Client.COLUMN_BIRTHDAY,
					Contract.Client.COLUMN_CELLPHONE,
					Contract.Client.COLUMN_DOCUMENT_ID,
					Contract.Client.COLUMN_EMAIL,
					Contract.Client.COLUMN_FINANCIAL_PRODUCT_MESSAGE,
					Contract.Client.COLUMN_FIRST_NAME,
					Contract.Client.COLUMN_GEOPOLITICAL_ID,
					Contract.Client.COLUMN_HAS_FINANCIAL_PRODUCT,
					Contract.Client.COLUMN_LAST_NAME,
					Contract.Client.COLUMN_MIDDLE_NAME,
					Contract.Client.COLUMN_PHONENUMBER,
					Contract.Client.COLUMN_SECOND_LAST_NAME,
					Contract.Client.COLUMN_HAS_FINANCIAL_PRODUCT_ALERT,
					Contract.Client.COLUMN_FINANCIAL_PRODUCT_ALERT_MESSAGE,
					Contract.Client.COLUMN_VALIDITY_FINANCIAL_PRODUCT_DATE,
					Contract.Client.COLUMN_AMOUNT_FINANCIAL_PRODUCT,
					Contract.Client.COLUMN_INTERNAL_PROCESS_ID,					
					Contract.Client.COLUMN_PHONENUMBER2,
					Contract.Client.COLUMN_CELLPHONE2,
					Contract.Client.COLUMN_ROADTYPE_ID,
					Contract.Client.COLUMN_ROADTYPE_NAME,
					Contract.Client.COLUMN_ZONETYPE_ID,
					Contract.Client.COLUMN_ZONETYPE_NAME,
					Contract.Client.COLUMN_LIVING_SITUATION,
					Contract.Client.COLUMN_PROFILE_ID,
					Contract.Client.COLUMN_ADDRESS_SEGMENT1,
					Contract.Client.COLUMN_ADDRESS_SEGMENT2,
					Contract.Client.COLUMN_ADDRESS_SEGMENT3,
					Contract.Client.COLUMN_ADDRESS_SEGMENT4,
					Contract.Client.COLUMN_ADDRESS_SEGMENT5,
					Contract.Client.COLUMN_ADDRESS_SEGMENT6,
					Contract.Client.COLUMN_ADDRESS_SEGMENT7,
					Contract.Client.COLUMN_ADDRESS_SEGMENT8,
					Contract.Client.COLUMN_ADDRESS_SEGMENT9,
					Contract.Client.COLUMN_ADDRESS_REFERENCE,
					Contract.Client.COLUMN_APPLY_REPAIR_STRATEGY,
					Contract.Client.COLUMN_REPAIR_STRATEGY_TYPE,
					Contract.Client.COLUMN_REPAIR_STRATEGY_ID,
					Contract.Client.COLUMN_FINANCIAL_PRODUCT_REASON_NOT_INTEREST,
				},
				filter,value
				);
		
		if(c.moveToFirst()){
			client = new Client();
			client.setAddress(CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS));
			client.setBirthdate(CursorUtils.getDate(c, Contract.Client.FIELD_BIRTHDAY));
			client.setCellphone(CursorUtils.getString(c, Contract.Client.FIELD_CELLPHONE));
			client.setDocumentNumber(CursorUtils.getString(c, Contract.Client.FIELD_DOCUMENT_ID));
			client.setEmail(CursorUtils.getString(c, Contract.Client.FIELD_EMAIL));
			client.setFinancialProductMessage(CursorUtils.getString(c, Contract.Client.FIELD_FINANCIAL_PRODUCT_MESSAGE));
			client.setFirstName(CursorUtils.getString(c, Contract.Client.FIELD_FIRST_NAME));
			client.setGeopoliticalId(CursorUtils.getLong(c, Contract.Client.FIELD_GEOPOLITICAL_ID));
			client.setHasFinancialProduct(CursorUtils.getBoolean(c, Contract.Client.FIELD_HAS_FINANCIAL_PRODUCT));
			client.setID(CursorUtils.getLong(c, Contract.Client._ID));
			client.setLastName(CursorUtils.getString(c, Contract.Client.FIELD_LAST_NAME));
			client.setMiddleName(CursorUtils.getString(c, Contract.Client.FIELD_MIDDLE_NAME));
			client.setPhoneNumber(CursorUtils.getString(c, Contract.Client.FIELD_PHONENUMBER));
			client.setSecondLastName(CursorUtils.getString(c, Contract.Client.FIELD_SECOND_LAST_NAME));
			
			client.setHasFinancialProductAlert(CursorUtils.getBoolean(c, Contract.Client.FIELD_HAS_FINANCIAL_PRODUCT_ALERT));
			client.setFinancialProductAlertMessage(CursorUtils.getString(c, Contract.Client.FIELD_FINANCIAL_PRODUCT_ALERT_MESSAGE));			
			client.setInternalProcessId(CursorUtils.getInt(c, Contract.Client.FIELD_INTERNAL_PROCESS_ID));
			client.setAmountFinancialProduct( CursorUtils.getDouble(c, Contract.Client.FIELD_AMOUNT_FINANCIAL_PRODUCT) );
			client.setValidityFinancialProductDate( CursorUtils.getDate(c, Contract.Client.FIELD_VALIDITY_FINANCIAL_PRODUCT_DATE) );
			
			client.setLivingSituation( CursorUtils.getString(c, Contract.Client.FIELD_LIVING_SITUATION) );
			client.setRoadTypeId( CursorUtils.getString(c, Contract.Client.FIELD_ROADTYPE_ID) );
			client.setRoadTypeName( CursorUtils.getString(c, Contract.Client.FIELD_ROADTYPE_NAME) );			
			client.setZoneTypeId( CursorUtils.getString(c, Contract.Client.FIELD_ZONETYPE_ID) );
			client.setZoneTypeName( CursorUtils.getString(c, Contract.Client.FIELD_ZONETYPE_NAME) );
			client.setProfileId( CursorUtils.getString(c, Contract.Client.FIELD_PROFILE_ID) );
			client.setPhoneNumber2( CursorUtils.getString(c, Contract.Client.FIELD_PHONENUMBER2) );
			client.setCellphone2( CursorUtils.getString(c, Contract.Client.FIELD_CELLPHONE2) );
			client.setAddressReference( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_REFERENCE) );
			client.setAddressSegment1( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT1) );
			client.setAddressSegment2( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT2) );
			client.setAddressSegment3( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT3) );
			client.setAddressSegment4( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT4) );
			client.setAddressSegment5( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT5) );
			client.setAddressSegment6( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT6) );
			client.setAddressSegment7( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT7) );
			client.setAddressSegment8( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT8) );
			client.setAddressSegment9( CursorUtils.getString(c, Contract.Client.FIELD_ADDRESS_SEGMENT9) );			
			client.setApplyRepairStrategy( CursorUtils.getBoolean(c, Contract.Client.FIELD_APPLY_REPAIR_STRATEGY) );
			client.setRepairStrategyType( CursorUtils.getInt(c, Contract.Client.FIELD_REPAIR_STRATEGY_TYPE) );
			client.setRepairStrategyId( CursorUtils.getString(c, Contract.Client.FIELD_REPAIR_STRATEGY_ID) );
			client.setFinancialProductReasonOfNotInterest( CursorUtils.getString(c, Contract.Client.FIELD_FINANCIAL_PRODUCT_REASON_NOT_INTEREST) );
			
			if(includeAlerts){
				client.setAlerts(Alert.getAlerts(db,client.getID()));
				
//				if(client.isHasFinancialProductAlert()){
//					Alert alert = new Alert();
//					alert.setMessage(client.getFinancialProductAlertMessage());
//					alert.setIsFinancialProductAlert(true);
//					client.getAlerts().add(0, alert);
//				}
			}
			
			if(includeFinancialProducts){
				client.setFinancialProducts(ClientFinancialProduct.getClientFinancialProducts(db, client.getID()));
			}
		}
		
		return client;
	}
	
	@Override
	public boolean validate() {		
		super.validate();
		
		if(TextUtils.isEmpty(getDocumentNumber()))
			addRequiredErrorValidation(KEY_DOCUMENT_NUMBER);
		if(TextUtils.isEmpty(getFirstName()))
			addRequiredErrorValidation(KEY_FIRST_NAME);
		if(TextUtils.isEmpty(getLastName()))
			addRequiredErrorValidation(KEY_LAST_NAME);
		if(TextUtils.isEmpty(getProfileId()))
			addRequiredErrorValidation(KEY_PROFILE_ID);
		if(TextUtils.isEmpty(getCellphone()))
			addRequiredErrorValidation(KEY_CELLPHONE);
		if(TextUtils.isEmpty(getPhoneNumber()))
			addRequiredErrorValidation(KEY_PHONE);
		if(TextUtils.isEmpty(getEmail()))
			addRequiredErrorValidation(KEY_EMAIL);
		
		return isValid();
	}
}
