package pe.com.maestro.commercial.models;

import java.util.ArrayList;
import java.util.List;

import android.database.Cursor;
import pe.com.maestro.commercial.db.Contract;
import rp3.data.entity.EntityBase;
import rp3.db.sqlite.DataBase;
import rp3.util.CursorUtils;

public class ClientFinancialProduct extends EntityBase<ClientFinancialProduct> {

	private long id;
	private long clientId;	
	private long financialProductId;			
	private boolean isSelected;
	private int internalMessageId;
	private FinancialProduct financialProduct;
	
	@Override
	public long getID() {		
		return id;
	}

	@Override
	public void setID(long id) {
		this.id = id;
	}

	@Override
	public boolean isAutoGeneratedId() {		
		return true;
	}

	@Override
	public String getTableName() {		
		return Contract.ClientFinancialProduct.TABLE_NAME;
	}

	public boolean isSelected(){
		return isSelected;
	}
	
	public void setIsSelected(boolean isSelected){
		this.isSelected = isSelected;
	}
	
	@Override
	public void setValues() {				
		setValue(Contract.ClientFinancialProduct.COLUMN_CLIENT_ID, this.clientId);
		setValue(Contract.ClientFinancialProduct.COLUMN_FINANCIAL_PRODUCT_ID, this.financialProductId);
		setValue(Contract.ClientFinancialProduct.COLUMN_IS_SELECTED, this.isSelected);
		setValue(Contract.ClientFinancialProduct.COLUMN_INTERNAL_MESSAGE_ID, this.internalMessageId);
	}

	@Override
	public Object getValue(String key) {		
		return null;
	}

	@Override
	public String getDescription() {		
		return String.valueOf(this.financialProductId);
	}
	
	public long getClientId() {
		return clientId;
	}

	public void setClientId(long clientId) {
		this.clientId = clientId;
	}
	
	public int getInternalMessageId() {
		return internalMessageId;
	}

	public void setInternalMessageId(int internalMessageId) {
		this.internalMessageId = internalMessageId;
	}

	public long getFinancialProductId() {
		return financialProductId;
	}	

	public void setFinancialProductId(long financialProductId) {
		this.financialProductId = financialProductId;
	}
	
	private void setFinancialProduct(FinancialProduct f){
		this.financialProduct = f;
	}
	
	public FinancialProduct getFinancialProduct(){
		return financialProduct;
	}
	
	public static void deleteClientFinancialProducts(DataBase db, long clientId){
		db.delete(Contract.ClientFinancialProduct.TABLE_NAME, Contract.ClientFinancialProduct.COLUMN_CLIENT_ID + " = ?", clientId);
	}
	
	public static List<ClientFinancialProduct> getClientFinancialProducts(DataBase db, long clientId){
		List<ClientFinancialProduct> products = new ArrayList<ClientFinancialProduct>();
		
//		Cursor c = db.query(Contract.ClientFinancialProduct.TABLE_NAME, new String[] {
//				Contract.ClientFinancialProduct._ID,
//				Contract.ClientFinancialProduct.COLUMN_FINANCIAL_PRODUCT_ID
//		}, Contract.ClientFinancialProduct.COLUMN_CLIENT_ID + " = ?", String.valueOf(clientId));
		
		Cursor c = db.rawQueryDir(Contract.ClientFinancialProduct.QUERY_CLIENT_FINANCIAL_PRODUCT, clientId);
		
		if(c.moveToFirst())
		{
			do{
				ClientFinancialProduct a = new ClientFinancialProduct();
				a.setID(CursorUtils.getLong(c, Contract.ClientFinancialProduct._ID));
				a.setFinancialProductId(CursorUtils.getLong(c,Contract.ClientFinancialProduct.FIELD_FINANNCIAL_PRODUCT_ID));
				a.setClientId(clientId);
				a.setIsSelected(CursorUtils.getBoolean(c,Contract.ClientFinancialProduct.FIELD_IS_SELECTED));
				a.setInternalMessageId(CursorUtils.getInt(c,Contract.ClientFinancialProduct.FIELD_INTERNAL_MESSAGE_ID));
				
				FinancialProduct p = new FinancialProduct();
				p.setID( a.getFinancialProductId() );
				p.setName( CursorUtils.getString(c,Contract.ClientFinancialProduct.FIELD_FINANCIAL_PRODUCT_NAME) );
				
				a.setFinancialProduct(p);
				
				products.add(a);
			}while(c.moveToNext());
		}
		
		return products;		
	}
}
